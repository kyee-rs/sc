------------ 📂🗄️ Simple Cache: Temporary (or not?) file hosting ------------
============================== Made by @voxelin ==============================

> WARNING: This branch is used specially to integrate with TimescaleDB.
> If you have regular postgresql, mysql, sqlite database, please refer to origin/main.

# Introduction
-----------------
Simple Cache is a service for minimalistic temporary (or not?) file hosting.
SC allows you to upload any file via `curl`, `httpie` or any other HTTP Client,
and store it for configured number of days (or forever).

# Routes
-----------------
* GET `/` - Returns 403 status code
* POST `/` - Uploads a file from multipart/form-data (Field: `file` or `url`)
* GET `/:id` - Loads a file preview in browser if possible. If not, downloads the file.

# Configuration
-----------------
The configuration is done via `config.hcl` file. Hashicorp Configuration Language is used.

Example config:
```
server "app_name" "server_name" {                                           # Set `app_name` and `server_name` to your desired values. Has no performance or runtime difference.
  port = 8080                                                               # Port
  database_url = "postgres://user:password@localhost:5432/db"               # TimescaleDB Connection URL
  seed = 3719                                                               # Seed for ID generation [type: random number > 0]
}

logger {
  force_colors = false                                                    # Force colored output
  full_timestamp = true
}

limits {
  max_size = 10                                                           # Max file size in MB
  block_tor = true                                                        # Block TOR exit nodes
  ip_blacklist = []                                                       # ["168.0.2.3", "1.2.3.4"...]
}
```